-- MySQL Script generated by MySQL Workbench
-- Thu Dec 14 09:28:28 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema kampus_old
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kampus_old
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kampus_old` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema tinyUnDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema tinyUnDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `tinyUnDB` ;
USE `kampus_old` ;

-- -----------------------------------------------------
-- Table `kampus_old`.`msg_description_pull`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_description_pull` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `msg_body` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`file_unit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`file_unit` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_holder_id` INT UNSIGNED NOT NULL,
  `file_url` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description_id` INT UNSIGNED NULL,
  `extension` VARCHAR(45) NULL,
  `status` VARCHAR(45) NOT NULL,
  `upload` DATETIME NOT NULL,
  `last_use` DATETIME NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `user_holder_id__fk_file_idx` (`user_holder_id` ASC),
  INDEX `msg_description_id__fk_file_idx` (`description_id` ASC),
  CONSTRAINT `user_holder_id__fk_file`
    FOREIGN KEY (`user_holder_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_file`
    FOREIGN KEY (`description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`user_account__old`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`user_account__old` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(32) NOT NULL,
  `role_id` INT UNSIGNED NOT NULL DEFAULT 0,
  `first_name` VARCHAR(20) NOT NULL,
  `second_name` VARCHAR(20) NOT NULL,
  `photo_avatar_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `user_photo_id__fk_user_idx` (`photo_avatar_id` ASC),
  CONSTRAINT `user_photo_id__fk_user`
    FOREIGN KEY (`photo_avatar_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`university`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`university` (
  `iduniversity` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`iduniversity`),
  UNIQUE INDEX `iduniversity_UNIQUE` (`iduniversity` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`faculty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`faculty` (
  `idfaculty` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `university_iduniversity` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idfaculty`),
  INDEX `fk_faculty_university1_idx` (`university_iduniversity` ASC),
  UNIQUE INDEX `idfaculty_UNIQUE` (`idfaculty` ASC),
  CONSTRAINT `fk_faculty_university1`
    FOREIGN KEY (`university_iduniversity`)
    REFERENCES `tinyUnDB`.`university` (`iduniversity`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`old_department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`old_department` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(32) NOT NULL,
  `faculty_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `faculty_id__fk_department_idx` (`faculty_id` ASC),
  CONSTRAINT `faculty_id__fk_department`
    FOREIGN KEY (`faculty_id`)
    REFERENCES `tinyUnDB`.`faculty` (`idfaculty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`teacher`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`teacher` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `department_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `department_id__fk_teacher_idx` (`department_id` ASC),
  CONSTRAINT `user_id__fk_teacher`
    FOREIGN KEY (`user_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `department_id__fk_teacher`
    FOREIGN KEY (`department_id`)
    REFERENCES `kampus_old`.`old_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`classroom_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`classroom_info` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `address` VARCHAR(45) NULL,
  `number` VARCHAR(45) NOT NULL,
  `size` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`classroom_types`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`classroom_types` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  UNIQUE INDEX `type_UNIQUE` (`type` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`classroom_content`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`classroom_content` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `classroom_id` INT UNSIGNED NOT NULL,
  `type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `classroom_id__fk_classroom_content_idx` (`classroom_id` ASC),
  INDEX `classroom_type_id__fk_classroom_content_idx` (`type_id` ASC),
  CONSTRAINT `classroom_id__fk_classroom_content`
    FOREIGN KEY (`classroom_id`)
    REFERENCES `kampus_old`.`classroom_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `classroom_type_id__fk_classroom_content`
    FOREIGN KEY (`type_id`)
    REFERENCES `kampus_old`.`classroom_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course` (
  `id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `official_course_id` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`file_dir_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`file_dir_info` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_holder_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description_id` INT UNSIGNED NULL,
  `status` VARCHAR(45) NOT NULL,
  `upload` DATETIME NOT NULL,
  `last_use` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `user_holder_id__fk_file_dir_info_idx` (`user_holder_id` ASC),
  INDEX `msg_description_id__fk_file_dir_info_idx` (`description_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `user_holder_id__fk_file_dir_info`
    FOREIGN KEY (`user_holder_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_file_dir_info`
    FOREIGN KEY (`description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course_semester_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course_semester_info` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `course_id` INT UNSIGNED NOT NULL,
  `hourse` INT NULL,
  `credits` INT NULL,
  `type_of_attestation` VARCHAR(45) NOT NULL COMMENT 'exam, credit etc.',
  `part` INT UNSIGNED NOT NULL,
  `department_id` INT UNSIGNED NOT NULL,
  `year_of_creation` YEAR NULL,
  `amount_lections` INT UNSIGNED NULL DEFAULT 0,
  `amount_practice` INT UNSIGNED NULL DEFAULT 0,
  `amount_laboratory` INT UNSIGNED NULL DEFAULT 0,
  `file_dir_info_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `course_id__fk_course_semester_info_idx` (`course_id` ASC),
  INDEX `department_id__fk_course_semester_info_dx` (`department_id` ASC),
  INDEX `file_dir_info_id__fk_course_semester_info_idx` (`file_dir_info_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `course_id__fk_course_semester_info`
    FOREIGN KEY (`course_id`)
    REFERENCES `kampus_old`.`course` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `department_id__fk_course_semester_info`
    FOREIGN KEY (`department_id`)
    REFERENCES `kampus_old`.`old_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `filepack_id__fk_course_semester_info`
    FOREIGN KEY (`file_dir_info_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course_semester_unit_reader`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course_semester_unit_reader` (
  `id` INT UNSIGNED NOT NULL,
  `teacher_id` INT UNSIGNED NOT NULL,
  `course_semester_info_id` INT UNSIGNED NOT NULL,
  `lesson_type` INT NULL,
  `year` YEAR NULL,
  `first_halfyear` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `teacher_id__fk_csur_idx` (`teacher_id` ASC),
  INDEX `course_semester_info_id__fk_csur_idx` (`course_semester_info_id` ASC),
  CONSTRAINT `teacher_id__fk_csur`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `kampus_old`.`teacher` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `course_semester_info_id__fk_csur`
    FOREIGN KEY (`course_semester_info_id`)
    REFERENCES `kampus_old`.`course_semester_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course_timetable_slot`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course_timetable_slot` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `course_reader_id` INT UNSIGNED NOT NULL,
  `day` INT UNSIGNED NOT NULL,
  `number` INT UNSIGNED NOT NULL,
  `week` INT UNSIGNED NOT NULL DEFAULT 0,
  `classroom_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `classroom_id__fk_cts_idx` (`classroom_id` ASC),
  INDEX `course_reader_id__fk_cts_idx` (`course_reader_id` ASC),
  CONSTRAINT `course_reader_id__fk_cts`
    FOREIGN KEY (`course_reader_id`)
    REFERENCES `kampus_old`.`course_semester_unit_reader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `classroom_id__fk_cts`
    FOREIGN KEY (`classroom_id`)
    REFERENCES `kampus_old`.`classroom_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`__course_timetable_tmp_changes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`__course_timetable_tmp_changes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `timeslot_id` INT UNSIGNED NULL,
  `status` VARCHAR(12) NULL,
  `date` DATE NULL,
  `number` INT UNSIGNED NOT NULL,
  `week` INT NOT NULL,
  `classroom_id` INT UNSIGNED NULL,
  `lesson_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `classroom_id_pk_idx___` (`classroom_id` ASC),
  INDEX `timeslot_id_pk_idx___` (`timeslot_id` ASC),
  CONSTRAINT `classroom_id_pk___`
    FOREIGN KEY (`classroom_id`)
    REFERENCES `kampus_old`.`classroom_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `timeslot_id_pk___`
    FOREIGN KEY (`timeslot_id`)
    REFERENCES `kampus_old`.`course_timetable_slot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`old_student_group_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`old_student_group_info` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `semester` INT UNSIGNED NOT NULL,
  `group_type` VARCHAR(45) NOT NULL COMMENT 'тип группы. бакалавры, спецы магистры и тд.',
  `formed` YEAR NULL COMMENT 'formed - сформирована',
  `release` YEAR NULL,
  `status` VARCHAR(45) NULL,
  `department_id` INT UNSIGNED NOT NULL,
  `starosta_id` INT UNSIGNED NOT NULL,
  `curator_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `department_id__fk_sgi_idx` (`department_id` ASC),
  INDEX `student_id__starosta__fk_sgi_idx` (`starosta_id` ASC),
  CONSTRAINT `department_id__fk_sgi`
    FOREIGN KEY (`department_id`)
    REFERENCES `kampus_old`.`old_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `student_id_starosta__fk_sgi`
    FOREIGN KEY (`starosta_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`old_student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`old_student` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `id_card_series` VARCHAR(3) NULL,
  `id_card_number` INT UNSIGNED NULL,
  `issued_by` DATE NULL,
  `valid_to` DATE NULL,
  `education_type` VARCHAR(45) NULL COMMENT 'дневное \\ заочное',
  `student_group_info_id` INT UNSIGNED NOT NULL,
  `status` VARCHAR(45) NULL,
  `student_doc_photo_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `user_id__fk_student_idx` (`user_id` ASC),
  INDEX `student_group_info_id__fk_student_idx` (`student_group_info_id` ASC),
  INDEX `student_doc_photo_id__fk_student_idx` (`student_doc_photo_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `user_id__fk_student`
    FOREIGN KEY (`user_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `student_group_info_id__fk_student`
    FOREIGN KEY (`student_group_info_id`)
    REFERENCES `kampus_old`.`old_student_group_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `student_doc_photo_id__fk_student`
    FOREIGN KEY (`student_doc_photo_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`teacher_academic_titles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`teacher_academic_titles` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `teacher_id` INT UNSIGNED NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `year` YEAR NULL,
  PRIMARY KEY (`id`),
  INDEX `teacher_id__fk_tat_idx` (`teacher_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `teacher_id__fk_tat`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `kampus_old`.`teacher` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`department_specialty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`department_specialty` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `department_id` INT UNSIGNED NOT NULL,
  `number` INT UNSIGNED NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `department_id__fk_ds_idx` (`department_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `department_id__fk_ds`
    FOREIGN KEY (`department_id`)
    REFERENCES `kampus_old`.`old_department` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`old_student_transcript_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`old_student_transcript_info` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `number` VARCHAR(15) NOT NULL,
  `department_specialty_id` INT UNSIGNED NULL,
  `entered` DATE NULL,
  `photo_doc_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `student_id__fk_sti_idx` (`student_id` ASC),
  INDEX `department_specialty_id__fk_sti_idx` (`department_specialty_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `photo_doc_id__fk_sti_idx` (`photo_doc_id` ASC),
  CONSTRAINT `student_id__fk_sti`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `department_specialty_id__fk_sti`
    FOREIGN KEY (`department_specialty_id`)
    REFERENCES `kampus_old`.`department_specialty` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `photo_doc_id__fk_sti`
    FOREIGN KEY (`photo_doc_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`old_student_transcript_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`old_student_transcript_field` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_transcript_info_id` INT UNSIGNED NOT NULL,
  `course_semester_info_id` INT UNSIGNED NOT NULL,
  `teacher_id` INT UNSIGNED NOT NULL,
  `national_scale` VARCHAR(20) NULL,
  `score` INT UNSIGNED NOT NULL,
  `ects` VARCHAR(3) NOT NULL,
  `date` DATE NOT NULL,
  `number_of_protection` INT UNSIGNED NULL DEFAULT 0,
  `semester` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `teacher_id__fk_stf_idx` (`teacher_id` ASC),
  INDEX `course_id___fk_stf_idx` (`course_semester_info_id` ASC),
  INDEX `student_transcript_id__fk_stf_idx` (`student_transcript_info_id` ASC),
  CONSTRAINT `student_transcript_info_id__fk_stf`
    FOREIGN KEY (`student_transcript_info_id`)
    REFERENCES `kampus_old`.`old_student_transcript_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `course_id__fk_stf`
    FOREIGN KEY (`course_semester_info_id`)
    REFERENCES `kampus_old`.`course_semester_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `teacher_id__fk_stf`
    FOREIGN KEY (`teacher_id`)
    REFERENCES `kampus_old`.`teacher` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course_semester_required`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course_semester_required` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `course_semester_info_id` INT UNSIGNED NOT NULL,
  `classroom_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `course_semester_info_id__fk_csr_idx` (`course_semester_info_id` ASC),
  INDEX `classroom_type_id__fk_csr_idx` (`classroom_type_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `course_semester_info_id__fk_csr`
    FOREIGN KEY (`course_semester_info_id`)
    REFERENCES `kampus_old`.`course_semester_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `classroom_type_id__fk_csr`
    FOREIGN KEY (`classroom_type_id`)
    REFERENCES `kampus_old`.`classroom_types` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`course_semester_unit_group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`course_semester_unit_group` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_group_info_id` INT UNSIGNED NOT NULL,
  `course_semester_unit_reader_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `student_group_info_id__fk_csug_idx` (`student_group_info_id` ASC),
  INDEX `course_semester_unit_reader__fk_csug_idx` (`course_semester_unit_reader_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `student_group_info_id__fk_csug`
    FOREIGN KEY (`student_group_info_id`)
    REFERENCES `kampus_old`.`old_student_group_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `course_semester_unit_reader__fk_csug`
    FOREIGN KEY (`course_semester_unit_reader_id`)
    REFERENCES `kampus_old`.`course_semester_unit_reader` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `msg_description_id` INT UNSIGNED NULL,
  `number_of` INT UNSIGNED NULL,
  `filepack_info_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `filepack_info_id__fk_lesson_idx` (`filepack_info_id` ASC),
  INDEX `msg_description_id__fk_lesson_idx` (`msg_description_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `filepack_info_id__fk_lesson`
    FOREIGN KEY (`filepack_info_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_lesson`
    FOREIGN KEY (`msg_description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_student_mark`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_student_mark` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `lesson_id` INT UNSIGNED NOT NULL,
  `makr` VARCHAR(10) NOT NULL,
  `msg_description_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `student_id_pk__fk_lsm_idx` (`student_id` ASC),
  INDEX `lesson_id__fk_lsm_idx` (`lesson_id` ASC),
  INDEX `msg_description_id__fk_lsm_idx` (`msg_description_id` ASC),
  CONSTRAINT `student_id__fk_lsm`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_lsm`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_lsm`
    FOREIGN KEY (`msg_description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_homework`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_homework` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `lesson_id` INT UNSIGNED NOT NULL,
  `deadline_date` DATE NULL,
  `msg_description_id` INT UNSIGNED NULL,
  `file_dir_info_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `filepack_info_id__fk_lh_idx` (`file_dir_info_id` ASC),
  INDEX `lesson_id__fk_lh_idx` (`lesson_id` ASC),
  INDEX `msg_description_id__fk_lh_idx` (`msg_description_id` ASC),
  CONSTRAINT `filepack_info_id__fk_lh`
    FOREIGN KEY (`file_dir_info_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_lh`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_lh`
    FOREIGN KEY (`msg_description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_visit_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_visit_log` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `lesson_id` INT UNSIGNED NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `student_id__fk_lvl_idx` (`student_id` ASC),
  INDEX `lesson_id__fk_lvl_idx` (`lesson_id` ASC),
  CONSTRAINT `student_id__fk_lvl`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_lvl`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`file_dir_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`file_dir_item` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `file_id` INT UNSIGNED NOT NULL,
  `file_dir_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `file_id__fk_fdi_idx` (`file_id` ASC),
  INDEX `file_dir_info_id__fk_fdi_idx` (`file_dir_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `file_id__fk_fdi`
    FOREIGN KEY (`file_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `file_dir_info_id__fk_fdi`
    FOREIGN KEY (`file_dir_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`file_dir_in_dir`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`file_dir_in_dir` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `childe_file_dir_id` INT UNSIGNED NOT NULL,
  `parent_file_dir_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `file_dir_info_id_childe__fk_fdid_idx` (`childe_file_dir_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `file_dir_info_id_parent__fk_fdid_idx` (`parent_file_dir_id` ASC),
  CONSTRAINT `file_dir_info_id_childe__fk_fdid`
    FOREIGN KEY (`childe_file_dir_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `file_dir_info_id_parent__fk_fdid`
    FOREIGN KEY (`parent_file_dir_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_calendar`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_calendar` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `course_timetable_slot_id` INT UNSIGNED NOT NULL,
  `lesson_id` INT UNSIGNED NOT NULL,
  `date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `lesson_id__fk_lc_idx` (`lesson_id` ASC),
  INDEX `course_timetable_slot_id__fk_lc_idx` (`course_timetable_slot_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `course_timetable_slot_id__fk_lc`
    FOREIGN KEY (`course_timetable_slot_id`)
    REFERENCES `kampus_old`.`course_timetable_slot` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_lc`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`notification_student_lesson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`notification_student_lesson` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `lesson_id` INT UNSIGNED NOT NULL,
  `notif_type` VARCHAR(45) NOT NULL,
  `notif_time` DATETIME NOT NULL,
  `viewed` TINYINT NULL,
  `destroy_time` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `student_id__fk_nsl_idx` (`student_id` ASC),
  INDEX `lesson_id__fk_nsl_idx` (`lesson_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `student_id__fk_nsl`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_nsl`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_homework_student_mark`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_homework_student_mark` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `lesson_homework_id` INT UNSIGNED NOT NULL,
  `mark` VARCHAR(10) NOT NULL,
  `msg_description_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  INDEX `lesson_homework_id__fk_lhsm_idx` (`lesson_homework_id` ASC),
  INDEX `student_id__fk_lhsm_idx` (`student_id` ASC),
  INDEX `msg_description_id__fk_lhsm_idx` (`msg_description_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `lesson_homework_id__fk_lhsm`
    FOREIGN KEY (`lesson_homework_id`)
    REFERENCES `kampus_old`.`lesson_homework` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `student_id__fk_lhsm`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_lhsm`
    FOREIGN KEY (`msg_description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`lesson_hw_from_student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`lesson_hw_from_student` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `lesson_homework_id` INT UNSIGNED NOT NULL,
  `student_id` INT UNSIGNED NOT NULL,
  `file_dir_info_id` INT UNSIGNED NOT NULL,
  `uploadtime` DATETIME NOT NULL,
  `msg_description_id` INT UNSIGNED NULL,
  `viewed` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `lesson_homework_id__fk_lswfs_idx` (`lesson_homework_id` ASC),
  INDEX `student_id__fk_lswfs_idx` (`student_id` ASC),
  INDEX `file_dir_info_id__fk_lswfs_idx` (`file_dir_info_id` ASC),
  INDEX `msg_description_id__fk_lswfs_idx` (`msg_description_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `lesson_homework_id__fk_lswfs`
    FOREIGN KEY (`lesson_homework_id`)
    REFERENCES `kampus_old`.`lesson_homework` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `student_id__fk_lswfs`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `file_dir_info_id__fk_lswfs`
    FOREIGN KEY (`file_dir_info_id`)
    REFERENCES `kampus_old`.`file_dir_info` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_description_id__fk_lswfs`
    FOREIGN KEY (`msg_description_id`)
    REFERENCES `kampus_old`.`msg_description_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`notification_teacher_lesson`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`notification_teacher_lesson` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `student_id` INT UNSIGNED NOT NULL,
  `lesson_id` INT UNSIGNED NOT NULL,
  `notif_type` VARCHAR(45) NOT NULL,
  `notif_time` DATETIME NOT NULL,
  `viewed` TINYINT NULL,
  `destroy_time` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `student_id__fk_ntl_idx` (`student_id` ASC),
  INDEX `lesson_id__fk_ntl_idx` (`lesson_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `student_id__fk_ntl`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk_ntl`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`notification_student_transcript`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`notification_student_transcript` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `transcript_content_id` INT UNSIGNED NOT NULL,
  `notif_type` VARCHAR(45) NOT NULL,
  `notif_time` DATETIME NOT NULL,
  `viewed` TINYINT NULL,
  `destroy_time` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `student_transcript_content_id__fk_nst_idx` (`transcript_content_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `student_transcript_content_id__fk_nst`
    FOREIGN KEY (`transcript_content_id`)
    REFERENCES `kampus_old`.`old_student_transcript_field` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_letter_body_pull`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_letter_body_pull` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `msg_body` VARCHAR(500) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_chatroom`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_chatroom` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `avatar_photo_id` INT UNSIGNED NULL,
  `user_holder_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `avatar_photo_id__fk_mcr_idx` (`avatar_photo_id` ASC),
  INDEX `user_holder_id__fk_mcr_idx` (`user_holder_id` ASC),
  CONSTRAINT `avatar_photo_id__fk_mcr`
    FOREIGN KEY (`avatar_photo_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_holder_id__fk_mcr`
    FOREIGN KEY (`user_holder_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_chatroom_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_chatroom_members` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `chatroom_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `user_id__fk_mcrm_idx` (`user_id` ASC),
  INDEX `chatroom_id__fk_mcrm_idx` (`chatroom_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `user_id__fk_mcrm`
    FOREIGN KEY (`user_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `chatroom_id__fk_mcrm`
    FOREIGN KEY (`chatroom_id`)
    REFERENCES `kampus_old`.`msg_chatroom` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_letter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_letter` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `recipient_id` INT UNSIGNED NOT NULL,
  `sender_id` INT UNSIGNED NOT NULL,
  `letter_body_head_id` INT UNSIGNED NOT NULL,
  `msg_type` INT UNSIGNED NOT NULL DEFAULT 0,
  `time` DATETIME NOT NULL,
  `viewed` TINYINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `recipient_user_id__fk_ml_idx` (`recipient_id` ASC),
  INDEX `sender_user_id__fk_ml_idx` (`sender_id` ASC),
  INDEX `msg_letter_body_id__fk_ml_idx` (`letter_body_head_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `recipient_user_id__fk_ml`
    FOREIGN KEY (`recipient_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_user_id__fk_ml`
    FOREIGN KEY (`sender_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_letter_body_id__fk_ml`
    FOREIGN KEY (`letter_body_head_id`)
    REFERENCES `kampus_old`.`msg_letter_body_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_chatroom_letter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_chatroom_letter` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `chatroom_recipient_id` INT UNSIGNED NOT NULL,
  `sender_id` INT UNSIGNED NOT NULL,
  `letter_body_head_id` INT UNSIGNED NOT NULL,
  `msg_type` INT UNSIGNED NOT NULL DEFAULT 0,
  `time` DATETIME NOT NULL,
  `viewed` TINYINT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `sender_user_id__fk_mcrl_idx` (`sender_id` ASC),
  INDEX `msg_letter_body_id__fk_mcrl_idx` (`letter_body_head_id` ASC),
  INDEX `chatroom_recipient_id__fk_mcrl_idx` (`chatroom_recipient_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `chatroom_recipient_id__fk_mcrl`
    FOREIGN KEY (`chatroom_recipient_id`)
    REFERENCES `kampus_old`.`msg_chatroom` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `sender_user_id__fk_mcrl`
    FOREIGN KEY (`sender_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_letter_body_id__fk_mcrl`
    FOREIGN KEY (`letter_body_head_id`)
    REFERENCES `kampus_old`.`msg_letter_body_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`___tbl_notification_msg_letter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`___tbl_notification_msg_letter` (
  `id` INT UNSIGNED NOT NULL,
  `student_id` INT UNSIGNED NULL,
  `lesson_id` INT UNSIGNED NULL,
  `notif_type` VARCHAR(45) NULL,
  `notif_time` DATETIME NULL,
  `viewed` TINYINT NULL,
  `destroy_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `student_id__fk_idx___` (`student_id` ASC),
  INDEX `lesson_id__fk_idx____` (`lesson_id` ASC),
  CONSTRAINT `student_id__fk____`
    FOREIGN KEY (`student_id`)
    REFERENCES `kampus_old`.`old_student` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `lesson_id__fk___`
    FOREIGN KEY (`lesson_id`)
    REFERENCES `kampus_old`.`lesson` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_chanel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_chanel` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL,
  `user_holder_id` INT UNSIGNED NOT NULL,
  `avatar_photo_id` INT UNSIGNED NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `avatar_photo_id__fk_mc_idx` (`avatar_photo_id` ASC),
  INDEX `user_holder_id__fk_mc_idx` (`user_holder_id` ASC),
  CONSTRAINT `avatar_photo_id__fk_mc`
    FOREIGN KEY (`avatar_photo_id`)
    REFERENCES `kampus_old`.`file_unit` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_holder_id__fk_mc`
    FOREIGN KEY (`user_holder_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_channel_letter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_channel_letter` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `channel_id` INT UNSIGNED NOT NULL,
  `letter_body_head_id` INT UNSIGNED NOT NULL,
  `msg_type` INT UNSIGNED NOT NULL,
  `time` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  CONSTRAINT `msg_channel_id__fk_mcl`
    FOREIGN KEY (`channel_id`)
    REFERENCES `kampus_old`.`msg_chanel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `msg_letter_body_id__fk_mcl`
    FOREIGN KEY (`letter_body_head_id`)
    REFERENCES `kampus_old`.`msg_letter_body_pull` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kampus_old`.`msg_channel_members`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kampus_old`.`msg_channel_members` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `channel_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `msg_channel_id__fk_mcm_idx` (`channel_id` ASC),
  INDEX `user_id__fk_mcm_dx` (`user_id` ASC),
  CONSTRAINT `msg_channel_id__fk_mcm`
    FOREIGN KEY (`channel_id`)
    REFERENCES `kampus_old`.`msg_chanel` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `user_id__fk_mcm`
    FOREIGN KEY (`user_id`)
    REFERENCES `kampus_old`.`user_account__old` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `tinyUnDB` ;

-- -----------------------------------------------------
-- Table `tinyUnDB`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`user` (
  `iduser` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(20) NOT NULL,
  `password` VARCHAR(60) NOT NULL,
  `role` VARCHAR(10) NOT NULL,
  `first_name` VARCHAR(45) NULL COMMENT 'изменить значение 45 на другое',
  `second_name` VARCHAR(45) NULL,
  PRIMARY KEY (`iduser`),
  UNIQUE INDEX `iduser_UNIQUE` (`iduser` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`user_extra_contacts`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`user_extra_contacts` (
  `iduser_extra_contacts` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_iduser` INT UNSIGNED NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `contact` VARCHAR(45) NOT NULL,
  `visibility` VARCHAR(45) NULL,
  PRIMARY KEY (`iduser_extra_contacts`),
  INDEX `fk_user_extra_contacts_user1_idx` (`user_iduser` ASC),
  UNIQUE INDEX `iduser_extra_contacts_UNIQUE` (`iduser_extra_contacts` ASC),
  CONSTRAINT `fk_user_extra_contacts_user`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `tinyUnDB`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`department`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`department` (
  `iddepartment` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `faculty_idfaculty` INT UNSIGNED NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`iddepartment`),
  INDEX `fk_department_faculty1_idx` (`faculty_idfaculty` ASC),
  UNIQUE INDEX `iddepartment_UNIQUE` (`iddepartment` ASC),
  CONSTRAINT `fk_department_faculty1`
    FOREIGN KEY (`faculty_idfaculty`)
    REFERENCES `tinyUnDB`.`faculty` (`idfaculty`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`student` (
  `idstudent` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_iduser` INT UNSIGNED NULL,
  `id_card_series` VARCHAR(5) NULL,
  `id_card_number` INT UNSIGNED NULL,
  `id_card_issued` DATE NULL,
  `id_card_deadline` DATE NULL,
  `transcript_number` VARCHAR(45) NULL,
  `student_group_info_idstudent_group_info` INT UNSIGNED NOT NULL,
  `status` VARCHAR(100) NULL,
  PRIMARY KEY (`idstudent`),
  INDEX `fk_student_user1_idx` (`user_iduser` ASC),
  INDEX `fk_student_student_group_info1_idx` (`student_group_info_idstudent_group_info` ASC),
  CONSTRAINT `fk_student_user1`
    FOREIGN KEY (`user_iduser`)
    REFERENCES `tinyUnDB`.`user` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_student_group_info1`
    FOREIGN KEY (`student_group_info_idstudent_group_info`)
    REFERENCES `tinyUnDB`.`student_group_info` (`idstudent_group_info`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`student_group_info`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`student_group_info` (
  `idstudent_group_info` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `academic_degree` VARCHAR(45) NULL,
  `year_of_foundation` DATE NULL,
  `year_of_issue` DATE NULL,
  `status` VARCHAR(45) NULL,
  `department_iddepartment` INT UNSIGNED NOT NULL,
  `tmp_curator` VARCHAR(45) NULL,
  `starosta_idstudent` INT UNSIGNED NULL,
  PRIMARY KEY (`idstudent_group_info`),
  INDEX `fk_student_group_info_department1_idx` (`department_iddepartment` ASC),
  UNIQUE INDEX `idstudent_group_info_UNIQUE` (`idstudent_group_info` ASC),
  INDEX `fk_student_group_info_student1_idx` (`starosta_idstudent` ASC),
  CONSTRAINT `fk_student_group_info_department1`
    FOREIGN KEY (`department_iddepartment`)
    REFERENCES `tinyUnDB`.`department` (`iddepartment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_student_group_info_student1`
    FOREIGN KEY (`starosta_idstudent`)
    REFERENCES `tinyUnDB`.`student` (`idstudent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `tinyUnDB`.`student_transcript_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tinyUnDB`.`student_transcript_field` (
  `idstudent_transcript_field` INT NOT NULL,
  `student_idstudent` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`idstudent_transcript_field`),
  INDEX `fk_student_transcript_field_student1_idx` (`student_idstudent` ASC),
  CONSTRAINT `fk_student_transcript_field_student1`
    FOREIGN KEY (`student_idstudent`)
    REFERENCES `tinyUnDB`.`student` (`idstudent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `kampus_old`.`user_account__old`
-- -----------------------------------------------------
START TRANSACTION;
USE `kampus_old`;
INSERT INTO `kampus_old`.`user_account__old` (`id`, `login`, `password`, `role_id`, `first_name`, `second_name`, `photo_avatar_id`) VALUES (1, 'root', 'root', 10101101, 'megaRut', 'dobt', NULL);
INSERT INTO `kampus_old`.`user_account__old` (`id`, `login`, `password`, `role_id`, `first_name`, `second_name`, `photo_avatar_id`) VALUES (4, 'wtf', 'lol', 1, 'qwe', 'asd', NULL);
INSERT INTO `kampus_old`.`user_account__old` (`id`, `login`, `password`, `role_id`, `first_name`, `second_name`, `photo_avatar_id`) VALUES (DEFAULT, 'asd', 'wsx', 1, 'rrr', 'ggg', NULL);
INSERT INTO `kampus_old`.`user_account__old` (`id`, `login`, `password`, `role_id`, `first_name`, `second_name`, `photo_avatar_id`) VALUES (7, '12www', 'ww', 1, 'sq', 'we', NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tinyUnDB`.`university`
-- -----------------------------------------------------
START TRANSACTION;
USE `tinyUnDB`;
INSERT INTO `tinyUnDB`.`university` (`iduniversity`, `name`) VALUES (1, 'NTUU KPI');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tinyUnDB`.`faculty`
-- -----------------------------------------------------
START TRANSACTION;
USE `tinyUnDB`;
INSERT INTO `tinyUnDB`.`faculty` (`idfaculty`, `university_iduniversity`, `name`) VALUES (2, 1, 'Faculty of Applied Mathematics');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tinyUnDB`.`user`
-- -----------------------------------------------------
START TRANSACTION;
USE `tinyUnDB`;
INSERT INTO `tinyUnDB`.`user` (`iduser`, `login`, `password`, `role`, `first_name`, `second_name`) VALUES (1, 'root', '$2a$10$cptXDAEhRT9ABpzynvn3keNYf9DgifT8dCUkgTvSilRgSnkVQzklW', 'admin', 'root_fname', 'root_sname');
INSERT INTO `tinyUnDB`.`user` (`iduser`, `login`, `password`, `role`, `first_name`, `second_name`) VALUES (2, 'student1', '$2a$10$cWsNEfTQrXp2HlBjZ0lF7OdjwFbiPtrSGdlb/S6Cg34Bb0hCmVYtW', 'student', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tinyUnDB`.`user_extra_contacts`
-- -----------------------------------------------------
START TRANSACTION;
USE `tinyUnDB`;
INSERT INTO `tinyUnDB`.`user_extra_contacts` (`iduser_extra_contacts`, `user_iduser`, `type`, `contact`, `visibility`) VALUES (1, 1, 'phone', '+380503800858', 'all');
INSERT INTO `tinyUnDB`.`user_extra_contacts` (`iduser_extra_contacts`, `user_iduser`, `type`, `contact`, `visibility`) VALUES (2, 1, 'email', 'vlasov.jr@gmail.com', 'all');
INSERT INTO `tinyUnDB`.`user_extra_contacts` (`iduser_extra_contacts`, `user_iduser`, `type`, `contact`, `visibility`) VALUES (3, 2, 'home phone', '530605', 'all');

COMMIT;


-- -----------------------------------------------------
-- Data for table `tinyUnDB`.`department`
-- -----------------------------------------------------
START TRANSACTION;
USE `tinyUnDB`;
INSERT INTO `tinyUnDB`.`department` (`iddepartment`, `faculty_idfaculty`, `name`) VALUES (1, 2, 'Department of Computer Systems Software, PZKS');
INSERT INTO `tinyUnDB`.`department` (`iddepartment`, `faculty_idfaculty`, `name`) VALUES (2, 2, 'Department of Applied Mathematics, PMA');
INSERT INTO `tinyUnDB`.`department` (`iddepartment`, `faculty_idfaculty`, `name`) VALUES (3, 2, 'Department of System Programming and Specialized Computer Systems, SPSCS');

COMMIT;

